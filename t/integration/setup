#!/usr/local/cpanel/3rdparty/bin/perl

#                                      Copyright 2025 WebPros International, LLC
#                                                           All rights reserved.
# copyright@cpanel.net                                         http://cpanel.net
# This code is subject to the cPanel license. Unauthorized copying is prohibited.

use Cpanel::JSON            ();
use Cpanel::OS              ();
use Cpanel::SafeRun::Object ();

# RE-1179 / RE-1244
if ( -e '/etc/scl/prefixes/ea-php80' ) {
    print "\nFile already exists at /etc/scl/prefixes/ea-php80; skipping install of ea-php80.\n";
}
else {
    print "\nFile does not exist at /etc/scl/prefixes/ea-php80; installing ea-php80 via scripts/installpkg\n";
    run_or_die(qw{/usr/local/cpanel/scripts/installpkg ea-php80});
}

# RE-1416 / RE-1461
print "\nInstalling ea-nginx via scripts/installpkg";
run_or_die(qw{/usr/local/cpanel/scripts/installpkg ea-nginx});

# RE-1568
if ( Cpanel::OS::distro() eq 'centos' && Cpanel::OS::major() == 7 ) {
    print "Setting update tier to 11.110\n";
    run_api_or_die(qw{whmapi1 set_tier tier=11.110})
}

print "Clearing the task queue\n";
run_or_die(qw{/usr/local/cpanel/bin/servers_queue run});

# RE-1573
print "Creating 3 accounts\n";
foreach my $domain (qw{withfpm nofpm inherit}) {
    run_api_or_die( 'whmapi1', 'createacct', "username=$domain", "domain=$domain.tld", );
}

print "Clearing the task queue\n";
run_or_die(qw{/usr/local/cpanel/bin/servers_queue run});

print "Setting 'withfpm' account to ea-php81 with php-fpm enabled\n";
run_api_or_die(qw{whmapi1 php_set_vhost_versions version=ea-php81 vhost=withfpm.tld php_fpm=1});

print "Setting 'nofpm' account to ea-php82 with php-fpm disabled\n";
run_api_or_die(qw{whmapi1 php_set_vhost_versions version=ea-php82 vhost=nofpm.tld php_fpm=0});

print "Setting 'inherit' account to inherit the default PHP version\n";
run_api_or_die(qw{whmapi1 php_set_vhost_versions version=inherit vhost=inherit.tld});

print "Clearing the task queue\n";
run_or_die(qw{/usr/local/cpanel/bin/servers_queue run});

exit 0;

sub run_or_die {
    my ( $program, @args ) = @_;

    my $run = Cpanel::SafeRun::Object->new_or_die(
        program => $program,
        args    => \@args,
    );

    my $out = $run->stdout();
    print "$out\n";
    return $out;
}

sub run_api_or_die {
    my ( $api, @call_args ) = @_;
    my $out = {};
    {
        local $@;
        $out = eval { Cpanel::JSON::Load( run_or_die( "/usr/local/cpanel/bin/$api", '--output=json', @call_args ) ) };
        die $@ if $@;
    }
    die "$api @call_args failed: $out->{'metadata'}{'reason'}" if ( exists $out->{metadata}{result} && $out->{'metadata'}{'result'} != 1 ) || ( exists $out->{result}{status} && $out->{result}{status} != 1 );
    return;
}
