on: [push]

env:
  TF_VAR_user: ${{ secrets.OS_USERNAME }}
  TF_VAR_application_credential_id: ${{ secrets.OS_APPLICATION_CREDENTIAL_ID }}
  TF_VAR_application_credential_secret: ${{ secrets.OS_APPLICATION_CREDENTIAL_SECRET }}
  TF_VAR_ssh_access_key: ${{ secrets.OS_SSH_KEY }}
  TF_VAR_os_auth_region: ${{ secrets.OS_AUTH_REGION }}
  TF_VAR_os_auth_url: ${{ secrets.OS_AUTH_URL }}
  TF_VAR_os_project_domain_name: ${{ secrets.OS_PROJECT_DOMAIN_NAME }}
  TF_VAR_os_password: ${{ secrets.OS_PASSWORD }}
  tf_working_directory: "./.github/workflows/openstack/terraform"

jobs: 
    terraform_init:
        runs-on: self-hosted
        defaults:
          run:
            working-directory: "./.github/workflows/openstack/terraform"
        steps:
        - uses: actions/checkout@v4
        - uses: hashicorp/setup-terraform@v3
          with:
            terraform_version: "1.8.3"

        - name: PWD CHECK
          id: pwd
          run: pwd

        - run: echo ${{ steps.pwd.outputs.stdout }}
        - run: echo ${{ steps.pwd.outputs.stderr }}
        - run: echo ${{ steps.pwd.outputs.exitcode }}          

        - name: Terraform fmt
          id: fmt
          run: terraform fmt -check
          continue-on-error: true

        - run: echo ${{ steps.fmt.outputs.stdout }}
        - run: echo ${{ steps.fmt.outputs.stderr }}
        - run: echo ${{ steps.fmt.outputs.exitcode }}

        - name: Terraform Init
          id: init
          run: terraform init

        - run: echo ${{ steps.init.outputs.stdout }}
        - run: echo ${{ steps.init.outputs.stderr }}
        - run: echo ${{ steps.init.outputs.exitcode }}

        - name: Terraform Plan
          id: plan
          run: terraform plan -no-color

        - run: echo ${{ steps.plan.outputs.stdout }}
        - run: echo ${{ steps.plan.outputs.stderr }}
        - run: echo ${{ steps.plan.outputs.exitcode }}

