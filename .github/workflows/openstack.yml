on: [push]

env:
  TF_VAR_user: ${{ secrets.OS_USERNAME }}
  TF_VAR_application_credential_id: ${{ secrets.OS_APPLICATION_CREDENTIAL_ID }}
  TF_VAR_application_credential_secret: ${{ secrets.OS_APPLICATION_CREDENTIAL_SECRET }}
  TF_VAR_ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
  TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
  TF_VAR_os_auth_region: ${{ secrets.OS_AUTH_REGION }}
  TF_VAR_os_auth_url: ${{ secrets.OS_AUTH_URL }}
  TF_VAR_os_project_domain_name: ${{ secrets.OS_PROJECT_DOMAIN_NAME }}
  TF_VAR_os_password: ${{ secrets.OS_PASSWORD }}
  tf_working_directory: "./.github/workflows/openstack/terraform"

jobs: 
    terraform_openstack_create:
        runs-on: self-hosted
        defaults:
          run:
            working-directory: "./.github/workflows/openstack/terraform"
        steps:
        - uses: actions/checkout@v4
        - name: Terraform fmt
          id: fmt
          run: |
            terraform fmt -check
          continue-on-error: true

        - name: Terraform Init
          id: init
          run: |
            terraform init

        - name: Terraform Plan
          id: plan
          run: |
            terraform plan -no-color

        - name: Terraform Apply
          id: apply
          run: |
            terraform apply -no-color -auto-approve

        - name: Terraform Output File Create
          run: |
            terraform output -json > ${{ github.workspace }}/tf.out.json

        - name: Get VM IP from Terraform Output File
          id: get_vm_ip
          run: |
            echo "VM_IP=$(jq -r '.address.value' ${{ github.workspace }}/tf.out.json)" >> "$GITHUB_OUTPUT"
            echo ${VM_IP} > vm_ip

        - name: Export VM_IP to Env
          env:
            VM_IP: ${{ steps.get_vm_ip.outputs.VM_IP }}
          run: echo "The VM IP is $VM_IP"

        - name: Upload JSON Output
          uses: actions/upload-artifact@v4
          with:
            name: terraform_output_json
            path: ${{ github.workspace }}/tf.out.json
            overwrite: true

    run_elevate:
        runs-on: self-hosted
        needs: terraform_openstack_create
        defaults:
          run:
            working-directory: "./.github/workflows/openstack/terraform"
        steps:
        - name: Get VM IP
          id: get_vm_ip
          run: cat vm_ip >> "$GITHUB_OUTPUT"
        - name: SSH Client Connect
          uses: appleboy/ssh-action@v1.0.3
          with:
            host: ${{ steps.get_vm_ip.outputs.VM_IP }}
            username: 'root'
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            port: '22'
            script: |
              hostname

    terraform_openstack_destroy:
      runs-on: self-hosted
      needs: run_elevate
      defaults:
        run:
          working-directory: "./.github/workflows/openstack/terraform"
      steps:
      - name: Download Terraform Output JSON
        uses: actions/download-artifact@v4
        with:
          name: terraform_output_json
          path: ${{ github.workspace }}/
      - name: Destroy OpenStack VM
        run: terraform destroy -no-color -auto-approve 
        